name: release
on:
  workflow_dispatch:
  release:
    types: [published]
env:
  PACKAGE_DIR: adbcug_adapter
  TESTS_DIR: tests
jobs:
  # build:
  #   runs-on: self-hosted
  #   defaults:
  #     run:
  #       shell: bash -l {0}
  #   strategy:
  #     matrix:
  #       python: ["3.7", "3.8", "3.9"]
  #   name: gpu
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python }}
  #     - name: Setup pip
  #       run: python -m pip install --upgrade pip setuptools wheel
  #     - name: Install dependencies
  #       run: |
  #         source ~/anaconda3/etc/profile.d/conda.sh
  #         conda activate ${{ matrix.python }}
  #         pip install .[dev]
  #     - name: Run black
  #       run: |
  #         source ~/anaconda3/etc/profile.d/conda.sh
  #         conda activate ${{ matrix.python }}
  #         black --version
  #         black --check --verbose --diff --color ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
  #     - name: Run flake8
  #       run: flake8 ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
  #     - name: Run isort
  #       run: isort --check --profile=black ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
  #     - name: Run mypy
  #       run: |
  #         source ~/anaconda3/etc/profile.d/conda.sh
  #         conda activate ${{ matrix.python }}
  #         mypy ${{env.PACKAGE_DIR}} ${{env.TESTS_DIR}}
  #     - name: Run pytest in conda env
  #       run: |
  #         source ~/anaconda3/etc/profile.d/conda.sh
  #         conda activate ${{ matrix.python }}
  #         conda run -n ${{ matrix.python }} py.test --cov=${{env.PACKAGE_DIR}} --cov-report xml --cov-report term-missing -v --color=yes --no-cov-on-fail --code-highlight=yes
  #     - name: Publish to coveralls.io
  #       if: matrix.python == '3.8'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: conda run -n ${{ matrix.python }} coveralls --service=github

  release:
    # needs: build
    runs-on: self-hosted
    defaults:
      run:
        shell: bash -l {0}
    name: release
    steps:
      - uses: actions/checkout@v2
      - name: Fetch complete history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Conda Build
        run: |
          source ~/anaconda3/etc/profile.d/conda.sh
          conda activate condabuild39
          anaconda login --username aMahanna --password '${{ secrets.CONDA_PASSWORD }}'
          conda config --set anaconda_upload yes
          conda build .

  changelog:
    needs: release
    runs-on: ubuntu-latest
    name: changelog
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create new branch
        run: git checkout -b actions/changelog

      - name: Set branch upstream
        run: git push -u origin actions/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install release packages
        run: pip install wheel gitchangelog pystache

      - name: Set variables
        run: echo "VERSION=$(curl ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest | python -c "import sys; import json; print(json.load(sys.stdin)['tag_name'])")" >> $GITHUB_ENV

      - name: Generate newest changelog
        run: gitchangelog ${{env.VERSION}} > CHANGELOG.md

      - name: Make commit for auto-generated changelog
        uses: EndBug/add-and-commit@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          add: "CHANGELOG.md"
          branch: actions/changelog
          message: "!gitchangelog"

      - name: Create pull request for the auto generated changelog
        run: |
          echo "PR_URL=$(gh pr create \
            --title "changelog: release ${{env.VERSION}}" \
            --body "beep boop, i am a robot" \
            --label documentation)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set pull request to auto-merge as rebase
        run: |
          gh pr merge $PR_URL \
            --auto \
            --delete-branch \
            --rebase
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
